openapi: 3.0.0
info:
  title: Order API
  description: API for managing orders
  version: 1.0.0
servers:
  - url: http://localhost:18080

paths:
  # task
  /tasks:
    get:
      summary: Get list of tasks
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskResponseDto'

    post:
      summary: Add a new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskAddRequestDto'
      responses:
        '201':
          description: Task added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponseDto'

  /tasks/{id}:
    get:
      summary: Get a specific task by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "01F8MECHZX3TBDSZ7XRADM79XV"
      responses:
        '200':
          description: A single task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponseDto'
        '404':
          description: Task not found

components:
  schemas:
    # request
    TaskAddRequestDto:
      type: object
      properties:
        userId:
          type: string
          example: "01F8MECHZX3TBDSZ7XRADM79X1"
        title:
          type: string
          minLength: 3
          maxLength: 50
          example: "Implement new feature"
        description:
          type: string
          nullable: true
          minLength: 1
          maxLength: 1000
          example: "This task is to implement the new feature for our product."
      required:
        - userId
        - title

    # response
    TaskResponseDto:
      type: object
      properties:
        id:
          type: string
          example: "01F8MECHZX3TBDSZ7XRADM79XV"
        title:
          type: string
          example: "Fix bug in the login feature"
        description:
          type: string
          nullable: true
          example: "The bug appears when a user tries to log in with special characters."
        status:
          type: string
          enum: [todo, doing, done]
          example: "doing"
        createdBy:
          type: string
          example: "01F8MECHZX3TBDSZ7XRADM79X1"
        assignedTo:
          type: string
          example: "01F8MECHZX3TBDSZ7XRADM79X2"
          nullable: true
        createdAt:
          type: string
          format: date-time
          example: "2023-10-17T12:34:56Z"
        updatedAt:
          type: string
          format: date-time
          nullable: true
          example: "2023-10-18T14:56:21Z"
      required:
        - id
        - title
        - status
        - createdBy
        - createdAt
